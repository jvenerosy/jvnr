#!/usr/bin/env node

/**
 * Script de validation SEO pour le site JVNR
 * V√©rifie que toutes les optimisations SEO sont correctement impl√©ment√©es
 */

const fs = require('fs');
const path = require('path');

console.log('üîç V√©rification des optimisations SEO...\n');

const checks = {
  passed: 0,
  failed: 0,
  warnings: 0
};

function checkFile(filePath, description) {
  if (fs.existsSync(filePath)) {
    console.log(`‚úÖ ${description}`);
    checks.passed++;
    return true;
  } else {
    console.log(`‚ùå ${description} - Fichier manquant: ${filePath}`);
    checks.failed++;
    return false;
  }
}

function checkFileContent(filePath, searchText, description) {
  if (fs.existsSync(filePath)) {
    const content = fs.readFileSync(filePath, 'utf8');
    if (content.includes(searchText)) {
      console.log(`‚úÖ ${description}`);
      checks.passed++;
      return true;
    } else {
      console.log(`‚ùå ${description} - Contenu manquant dans: ${filePath}`);
      checks.failed++;
      return false;
    }
  } else {
    console.log(`‚ùå ${description} - Fichier manquant: ${filePath}`);
    checks.failed++;
    return false;
  }
}

function warning(message) {
  console.log(`‚ö†Ô∏è  ${message}`);
  checks.warnings++;
}

// V√©rification des fichiers essentiels
console.log('üìÅ Fichiers de configuration SEO:');
checkFile('public/robots.txt', 'robots.txt pr√©sent');
checkFile('public/sitemap.xml', 'sitemap.xml pr√©sent');
checkFile('public/manifest.json', 'manifest.json pr√©sent');

console.log('\nüìÑ M√©tadonn√©es et structure:');
checkFileContent('src/app/layout.tsx', 'metadataBase', 'metadataBase configur√©');
checkFileContent('src/app/layout.tsx', 'openGraph', 'Open Graph configur√©');
checkFileContent('src/app/layout.tsx', 'twitter', 'Twitter Cards configur√©es');
checkFileContent('src/app/layout.tsx', 'robots', 'Directives robots configur√©es');

console.log('\nüèóÔ∏è  Donn√©es structur√©es:');
checkFileContent('src/components/StructuredData.tsx', '@type": "Person"', 'Schema Person');
checkFileContent('src/components/StructuredData.tsx', '@type": "Organization"', 'Schema Organization');
checkFileContent('src/components/StructuredData.tsx', '@type": "Service"', 'Schema Service');
checkFileContent('src/components/StructuredData.tsx', '@type": "WebSite"', 'Schema WebSite');

console.log('\nüé® Optimisations CSS:');
checkFileContent('src/app/globals.css', 'font-display: swap', 'Font display swap');
checkFileContent('src/app/globals.css', 'prefers-reduced-motion', 'Respect des pr√©f√©rences de mouvement');
checkFileContent('src/app/globals.css', '.sr-only', 'Classe screen reader only');

console.log('\n‚ôø Accessibilit√©:');
checkFileContent('src/components/Header.tsx', 'aria-label', 'ARIA labels dans Header');
checkFileContent('src/components/Hero.tsx', 'role="banner"', 'R√¥les ARIA dans Hero');
checkFileContent('src/components/About.tsx', 'aria-labelledby', 'ARIA labelledby dans About');

console.log('\n‚ö° Performance:');
checkFileContent('next.config.ts', 'compress: true', 'Compression activ√©e');
checkFileContent('next.config.ts', 'swcMinify: true', 'Minification SWC');
checkFileContent('next.config.ts', 'optimizeCss: true', 'Optimisation CSS');

// V√©rifications suppl√©mentaires
console.log('\nüîç V√©rifications suppl√©mentaires:');

// V√©rifier la pr√©sence de mots-cl√©s dans le contenu
const layoutContent = fs.readFileSync('src/app/layout.tsx', 'utf8');
if (layoutContent.includes('d√©veloppeur web') && layoutContent.includes('SEO') && layoutContent.includes('performance')) {
  console.log('‚úÖ Mots-cl√©s principaux pr√©sents dans les m√©tadonn√©es');
  checks.passed++;
} else {
  console.log('‚ùå Mots-cl√©s principaux manquants dans les m√©tadonn√©es');
  checks.failed++;
}

// V√©rifier la structure HTML s√©mantique
const pageContent = fs.readFileSync('src/app/page.tsx', 'utf8');
if (pageContent.includes('<main') && pageContent.includes('<Header')) {
  console.log('‚úÖ Structure HTML s√©mantique correcte');
  checks.passed++;
} else {
  console.log('‚ùå Structure HTML s√©mantique incorrecte');
  checks.failed++;
}

// Avertissements pour les √©l√©ments √† v√©rifier manuellement
console.log('\n‚ö†Ô∏è  √Ä v√©rifier manuellement:');
warning('Images: V√©rifier que toutes les images ont un alt text appropri√©');
warning('Liens: V√©rifier que tous les liens externes ont rel="noopener"');
warning('Performance: Tester les Core Web Vitals avec Lighthouse');
warning('Mobile: Tester la responsivit√© sur diff√©rents appareils');
warning('Contenu: V√©rifier la densit√© et la pertinence des mots-cl√©s');

// R√©sum√©
console.log('\nüìä R√©sum√© de la v√©rification SEO:');
console.log(`‚úÖ Tests r√©ussis: ${checks.passed}`);
console.log(`‚ùå Tests √©chou√©s: ${checks.failed}`);
console.log(`‚ö†Ô∏è  Avertissements: ${checks.warnings}`);

const score = Math.round((checks.passed / (checks.passed + checks.failed)) * 100);
console.log(`\nüéØ Score SEO: ${score}%`);

if (score >= 90) {
  console.log('üéâ Excellent ! Votre site est tr√®s bien optimis√© pour le SEO.');
} else if (score >= 75) {
  console.log('üëç Bon travail ! Quelques am√©liorations mineures possibles.');
} else if (score >= 60) {
  console.log('‚ö†Ô∏è  Des am√©liorations sont n√©cessaires pour optimiser le SEO.');
} else {
  console.log('‚ùå Des optimisations importantes sont requises.');
}

console.log('\nüìö Pour plus d\'informations, consultez le fichier SEO-OPTIMIZATIONS.md');

// Code de sortie
process.exit(checks.failed > 0 ? 1 : 0);